package university.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;public class main_class extends JFrame implements ActionListener {    main_class(){        ImageIcon i1= new ImageIcon(ClassLoader.getSystemResource("icon/third.jpg"));        Image i2 = i1.getImage().getScaledInstance(1400,650,Image.SCALE_DEFAULT);        ImageIcon i3= new ImageIcon(i2);        JLabel img = new JLabel(i3);        add(img);        JMenuBar mb = new JMenuBar();        //new Information        JMenu newInfo = new JMenu("New Information");        newInfo.setForeground(Color.BLACK);        newInfo.addActionListener(this);        mb.add(newInfo);        JMenuItem facultyInfo = new JMenuItem("New Faculty Information");        facultyInfo.setBackground(Color.white);        facultyInfo.addActionListener(this);        newInfo.add(facultyInfo);        JMenuItem studentInfo = new JMenuItem("New Student Information");        studentInfo.setBackground(Color.white);        studentInfo.addActionListener(this);        newInfo.add(studentInfo);        //Details        JMenu details = new JMenu("View Details");        details.setForeground(Color.BLACK);        details.addActionListener(this);        mb.add(details);        JMenuItem facultyDetails = new JMenuItem("View Faculty Details");        facultyDetails.setBackground(Color.white);        facultyDetails.addActionListener(this);        details.add(facultyDetails);        JMenuItem studentDetails = new JMenuItem("View Student Details");        studentDetails.setBackground(Color.white);        studentDetails.addActionListener(this);        details.add(studentDetails);        //Leave        JMenu leave = new JMenu("Leave");        leave.setForeground(Color.BLACK);        leave.addActionListener(this);        mb.add(leave);        JMenuItem facultyLeave = new JMenuItem("Faculty Leave");        facultyLeave.setBackground(Color.white);        facultyDetails.addActionListener(this);        leave.add(facultyLeave);        JMenuItem studentLeave = new JMenuItem("Student Leave");        studentLeave.setBackground(Color.white);        studentLeave.addActionListener(this);        leave.add(studentLeave);        //Leave Details        JMenu leaveDetails = new JMenu("Leave Details");        leaveDetails.setForeground(Color.BLACK);        leaveDetails.addActionListener(this);        mb.add(leaveDetails);        JMenuItem facultyLeaveDetails = new JMenuItem("Faculty Leave Details");        facultyLeaveDetails.setBackground(Color.white);        facultyDetails.addActionListener(this);        leaveDetails.add(facultyLeaveDetails);        JMenuItem studentLeaveDetails = new JMenuItem("Student Leave Details");        studentLeaveDetails.setBackground(Color.white);        studentLeaveDetails.addActionListener(this);        leaveDetails.add(studentLeaveDetails);        //Exams        JMenu exam = new JMenu("Examination");        exam.setForeground(Color.BLACK);        exam.addActionListener(this);        mb.add(exam);        JMenuItem ExaminationDetails = new JMenuItem("Examination Result");        ExaminationDetails.setBackground(Color.white);        ExaminationDetails.addActionListener(this);        exam.add(ExaminationDetails);        JMenuItem EnterMarks = new JMenuItem("Enter Marks");        EnterMarks.setBackground(Color.white);        EnterMarks.addActionListener(this);        exam.add(EnterMarks);        //Update Info        JMenu UpdateInfo = new JMenu("Update Details");        UpdateInfo.setForeground(Color.BLACK);        mb.add(UpdateInfo);        JMenuItem UpdateFacultyInfo = new JMenuItem("Update Faculty Info");        UpdateFacultyInfo.setBackground(Color.white);        UpdateFacultyInfo.addActionListener(this);        UpdateInfo.add(UpdateFacultyInfo);        JMenuItem UpdateStudentInfo = new JMenuItem("Update Student Info");        UpdateStudentInfo.setBackground(Color.white);        UpdateStudentInfo.addActionListener(this);        UpdateInfo.add(UpdateStudentInfo);        // fee        JMenu fee = new JMenu("Fee Details");        fee.setForeground(Color.BLACK);        fee.addActionListener(this);        mb.add(fee);        JMenuItem feestructure = new JMenuItem("Fee Structure");        feestructure.setBackground(Color.WHITE);        feestructure.addActionListener(this);        fee.add(feestructure);        JMenuItem feeForm = new JMenuItem("Student Fee Form");        feeForm.setBackground(Color.WHITE);        feeForm.addActionListener(this);        fee.add(feeForm);        // utility        JMenu utility = new JMenu("Utility");        utility.setForeground(Color.BLACK);        utility.addActionListener(this);        mb.add(utility);        JMenuItem ca = new JMenuItem("Calculator");        ca.setBackground(Color.WHITE);        ca.addActionListener(this);        utility.add(ca);        JMenuItem Notepad = new JMenuItem("Notepad");        Notepad.setBackground(Color.WHITE);        Notepad.addActionListener(this);        utility.add(Notepad);        // about        JMenu about = new JMenu("About");        about.setForeground(Color.BLACK);        about.addActionListener(this);        mb.add(about);        JMenuItem About = new JMenuItem("About");        About.setBackground(Color.WHITE);        About.addActionListener(this);        about.add(About);        // exit        JMenu exit = new JMenu("Exit");        exit.setForeground(Color.BLACK);        exit.addActionListener(this);        mb.add(exit);        JMenuItem Exit = new JMenuItem("Exit");        Exit.setBackground(Color.WHITE);        Exit.addActionListener(this);        exit.add(Exit);        setJMenuBar(mb);        setSize(1400,700);        setVisible(true);    }    @Override    public void actionPerformed(ActionEvent e) {        String sm = e.getActionCommand();        if (sm.equals("Exit")){            System.exit(15);        } else if (sm.equals("Calculator")){            try {                Runtime.getRuntime().exec("calc.exe");            }catch (Exception E){                E.printStackTrace();            }        } else if (sm.equals("Notepad")) {            try {                Runtime.getRuntime().exec("notepad.exe");            }catch (Exception E){                E.printStackTrace();            }        } else if (sm.equals("New Faculty Information")) {            new AddFaculty();        }else if (sm.equals("New Student Information")){            new AddStudent();        } else if (sm.equals("View Faculty Details")) {            new TeacherDetails();        } else if (sm.equals("View Student Details")) {            new StudentDetails();        } else if (sm.equals("Faculty Leave")) {            new TeacherLeave();        } else if (sm.equals("Student Leave")) {            new StudentLeave();        } else if (sm.equals("Faculty Leave Details")) {            new TeacherLeaveDetails();        } else if (sm.equals("Student Leave Details")) {            new StudentLeaveDetails();        } else if (sm.equals("Update Faculty Details")) {            new UpdateTeacher();        } else if (sm.equals("Update Student Details")) {            new updateStudent();        } else if (sm.equals("Enter Marks")) {            new EnterMarks();        } else if (sm.equals("Examination Results")) {            new ExaminationDetails();        } else if (sm.equals("Fee Structure")) {            new FreeStructure();        }else if (sm.equals("Student Fee Form")){            new StudentFeeForm();        } else if (sm.equals("About")) {            new About();        }    }    public static void main(String[] args) {        new main_class();    }}